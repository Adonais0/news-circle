#Connect to phone

1. install android studio

2. Connect device

3. cd news-circle/platforms

4. Check if device is connected:

adb devices

5. Build app on phone

ionic cordova run android

#Drop all tables in psql database (to apply new migration)

1. start psql, specifying db and user

psql newscircle postgres
;;
2. Enter password

3. run

DROP SCHEMA public CASCADE;
CREATE SCHEMA public;

GRANT ALL ON SCHEMA public TO postgres;

#Drop all records from table (eg news)

DELETE FROM news
GRANT ALL ON SCHEMA public TO public;

#Heroku credentials

email: murrayn@umich.edu

password: damnkitties!5


#Heroku deployment - App

From this 

https://medium.com/@BennettGarner/deploying-django-to-heroku-procfile-static-root-other-pitfalls-e7ab8b2ba33b

Of note
0. you really have to do all this from the django project folder for us its

news-circle/backend/server

1. You really do have to make a new git repo in the django project folder
2. Procfile should look like 

web: gunicorn server.wsgi

Verify its working with

heroku ps:scale web=1

Finally, the ssl workaround at the end of the link above was throwing an error, so we skipped it

#Heroku deployment, migrating db from local

https://medium.com/@BennettGarner/deploying-django-to-heroku-connecting-heroku-postgres-fcc960d290d1

1. create pg dump file (pg_dump -U username dbname > outfile)

from inside the django project folder it loos like this

pg_dump --format=c -U postgres newscircle > db_dumps/newscircle.dump

2. Load the dump file (as a restore) to the database

https://devcenter.heroku.com/articles/heroku-postgres-import-export

it involves setting up an S3 bucket 

https://devcenter.heroku.com/articles/s3

AWS credentials:

email: murrayn@umich.edu
password: damnkitties!5

Of note:

Access security credentials via main console > account name in upper right >
Security credentials.

Add the newscircle.bak file you created in 1. to the bucket

*Make sure to set permissions so that public as full access

install aws cli here:

https://docs.aws.amazon.com/cli/latest/userguide/cli-chap-install.html

Generate a signed URL like this (url found by checking box next to uploaded file in S3, reading URL from pop up that appears from the right)

aws s3 presign s3://s3.us-east-2.amazonaws.com/news-circle/newscircle.dump

Finally

heroku pg:backups:restore "https://s3.us-east-2.amazonaws.com/news-circle/newscircle.dump" DATABASE_URL

#Connect to Heroku DB

https://devcenter.heroku.com/articles/heroku-postgresql#connecting-in-python

(Make sure DATABASE_URL is declared as an environment variable here)
https://devcenter.heroku.com/articles/config-vars#setting-up-config-vars-for-a-deployed-application

#Remote into Heroku DB

heroku pg:psql

//do yourstuff!


#Heroku Scheduler

https://devcenter.heroku.com/articles/scheduler

And this, more specifically for Python

https://devcenter.heroku.com/articles/clock-processes-python